<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	                    http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd"
	default-lazy-init="true">

	<bean id="shiroFilter" class="com.jw.hms.example.m31xx.f001.core.shiro.MyShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.do" /> <!-- 登录失败后的跳转页面 -->
		<property name="successUrl" value="/index" /><!-- 登录成功后的跳转页面 -->
		<property name="unauthorizedUrl" value="/unauthorized.do" /><!-- 鉴权失败后的跳转页面 -->

		<property name="loadFromDatabase">
			<value>true</value>
		</property>
		
		<property name="filterChainDefinitions">
			<value><!-- 数据库中配置 -->
				/** = anon
			</value>
		</property>
		<property name="filters">
			<map>
				<entry key="authc" value-ref="authenticationFilter" />
			</map>
		</property>
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="authenticationRealm" />
		<!-- <property name="cacheManager" ref="shiroCacheManager" /> -->
	</bean>

	<bean id="authenticationRealm" class="com.jw.hms.example.m31xx.f001.core.shiro.AuthenticationRealm">
		<property name="authorizationCacheName" value="authorization" />
	</bean>

	<!-- <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager"> 
		<property name="cacheManager" ref="ehcacheManagerFactory" /> </bean> -->
	<bean id="authenticationFilter" class="com.jw.hms.example.m31xx.f001.core.web.filter.AuthenticationFilter" />

	<bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>

	<!-- shiro annotation -->
	<!--
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
	-->
</beans>